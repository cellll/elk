# /***********************************************************************
# This module was automatically generated using the framework found below:
# https://www.elastic.co/guide/en/beats/devguide/current/new-beat.html

# Modifications to auto-generated code - Copyright 2018 eBay Inc.
# Architect/Developer: Deepak Vasthimal

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# https://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ************************************************************************/

################### Nvidiagpubeat Configuration Example #########################

############################# Nvidiagpubeat ######################################

nvidiagpubeat:
  # Defines how often an event is sent to the output
  period: 2s
  query: "utilization.gpu,utilization.memory,memory.total,memory.free,memory.used,temperature.gpu,pstate"
  env: "production"
  # env can be test or production. test is for test purposes to evaluate funcationality of this beat. Switch to production
  # when you want to run this beat on a Nvidia GPU machine with SMI driver installed.

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging

#================================ Outputs =====================================

# Configure what outputs to use when sending the data collected by the beat.
# Multiple outputs may be used.
  
# setup.template.overwrite: false
# setup.template.enabled: true
# setup.template.name: "gpubeat"
# setup.template.pattern: "metricbeat-nvidiagpubeat-*"
# setup.ilm.enabled: false
# setup.ilm.rollover_alias: "gpubeat"
# setup.ilm.policy_name: "gpubeat"
# setup.ilm.check_exists: true

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["${eshost}:9200"]
  index: "nvidiagpubeat-%{[agent.version]}-%{+yyyy.MM.dd}"
  
setup.ilm:
  enabled: false
  policy_name: nvidiagpubeat
  check_exists: true
  
setup.template:
  name: "nvidiagpubeat"
  pattern: "nvidiagpubeat-*"
  enabled: true
  
#   A template is used to set the mapping in Elasticsearch
  # By default template loading is enabled and the template is loaded.
  # These settings can be adjusted to load your own template or overwrite existing ones.

#   Set to false to disable template loading.
#   template.enabled: true

#   # Template name. By default the template name is nvidiagpubeat.
#   template.name: "asdf"
#   # Path to template file
#   template.path: "/root/beats_dev/src/github.com/ebay/nvidiagpubeat/nvidiagpubeat.template.json"

#   # Overwrite existing template
#   template.overwrite: false

  # If set to true, nvidiagpubeat checks the Elasticsearch version at connect time, and if it
  # is 2.x, it loads the file specified by the template.versions.2x.path setting. The
  # default is true.
  #template.versions.2x.enabled: true

  # Path to the Elasticsearch 2.x version of the template file.
  #template.versions.2x.path: "${path.config}/nvidiagpubeat.template-es2x.json"
   
  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"

#----------------------------- Logstash output --------------------------------
#output.logstash:
  # The Logstash hosts
  #hosts: ["localhost:5044"]

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

#================================ Logging =====================================
# Sets log level. The default log level is info.
# Available log levels are: critical, error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]
